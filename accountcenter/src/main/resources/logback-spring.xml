<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="60 seconds" debug="true">
	<springProperty scope="context" name="logLevel" source="log.level"/>
	<springProperty scope="context" name="logPath" source="log.path"/>
	<contextName>accountcenter</contextName>
	<!--输出到控制台-->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-ddHH:mm:ss.SSS} %contextName [%thread] %-5level %logger{50} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录info级别的 ThresholdFilter是临界值过滤器 过滤掉低于指定临界值的日志。 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>

	<!--输出到文件，按照每天生成日志文件-->
	<appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${logPath}/ac.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径-->
           <fileNamePattern>${log.path}/ac.%d{yyyy-MM-dd}.log</fileNamePattern>
           <!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-ddHH:mm:ss.SSS} %contextName [%thread] %-5level %logger{50} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
		<!-- 此日志文件只记录info级别的 LevelFilter是级别过滤器-->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>INFO</level>
			<!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
			<!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
			<!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logPath}/ac_error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/ac-error.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-ddHH:mm:ss.SSS} %contextName [%thread] %-5level %logger{50} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="SQL" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logPath}/ac_sql.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/ac-sql.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-ddHH:mm:ss.SSS} %contextName [%thread] %-5level %logger{50} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>

	<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
	<!--myibatis log configure-->
	<logger name="com.apache.ibatis" level="error"/>
	<logger name="java.sql.Connection" level="error"/>
	<logger name="java.sql.Statement" level="error"/>
	<logger name="java.sql.PreparedStatement" level="error"/>


	<!--输出SQL语句-->
	<logger name="com.rudao.advertisingplatform.repository.mapper" level="error" additivity="false">
		<appender-ref ref="SQL"/>
		<appender-ref ref="STDOUT"/>
	</logger>


	<!--日志异步到数据库 -->
	<!--<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">-->
		<!--&lt;!&ndash;日志异步到数据库 &ndash;&gt;-->
		<!--<connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">-->
		<!--&lt;!&ndash;连接池 &ndash;&gt;-->
		<!--<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
			<!--<driverClass>com.mysql.jdbc.Driver</driverClass>-->
			<!--<url>jdbc:mysql://127.0.0.1:3306/databaseName</url>-->
			<!--<user>root</user>-->
			<!--<password>root</password>-->
	   	<!--</dataSource>-->
		<!--</connectionSource>-->
	<!--</appender>-->

	<springProfile name="product">
		<!--root中的DEBUG是系统的日志级别-->
		<root level="DEBUG">
			<appender-ref ref="STDOUT"/>
			<appender-ref ref="ERROR"/>
		</root>
		<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
	</springProfile>


	<springProfile name="dev">
		<root level="DEBUG">
			<appender-ref ref="STDOUT"/>
			<appender-ref ref="INFO"/>
			<appender-ref ref="ERROR"/>
		</root>
	</springProfile>

	<springProfile name="test">
		<root level="info">
			<appender-ref ref="STDOUT"/>
			<appender-ref ref="INFO"/>
			<appender-ref ref="ERROR"/>
			<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
		</root>
	</springProfile>

</configuration>